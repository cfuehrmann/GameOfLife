<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003" ToolsVersion="12.0" DefaultTargets="RunTests">

  <!-- Concerning incremental build: when called on a single file, tsc also builds the dependencies! 
  (Maybe this is different without requirejs, but currently we use requirejs.) Plus, the time spent 
  by tsc turns out to be mostly startup time! So, unless we find a way to make tsc compile single
  files, we achieve the fastest build by calling tsc only once, with all required ts files as arguments.
  There should be a more elegant way to achieve this than below. But since we replace msbuild by
  grunt or gulp soon, we defer the required change. -->
  <Target Name="JS">
    <Exec Command="tsc --outDir BuildOutput --module amd --noImplicitAny main.ts arrayscene.test.ts" />
  </Target>

  <Target Name="RunTests" DependsOnTargets="JS">
    <Exec Command="karma start" />
  </Target>
  
  <!-- Before committing to source control, we want to ensure that the tests do not succeed only due to 
  files that are not committed. To remove files that are not committed, we use the target "SourceClean".
  However, we want to be sure that we do not remove untracked files by accident. So we fist call
  "SourceCleanCheck" to see which files would be removed. In summary, before committing, we do this:
  (1) Run SourceCleanCheck
  (2) If SourceCleanCheck shows files we want to keep, track those
  (3) Run SourceClean 
  (4) Run the tests
  -->
  
  <Target Name="SourceCleanCheck">
    <Exec Command="git clean -n -x -d -e *.suo"></Exec>
  </Target>
  
  <Target Name="SourceClean">
    <Exec Command="git clean -f -x -d -e *.suo"></Exec>
  </Target>

  <Target Name="Test">
    <Exec Command="tsc --version" />
  </Target>
</Project>